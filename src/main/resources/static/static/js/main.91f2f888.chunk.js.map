{"version":3,"sources":["components/Employee/AllEmployees.js","components/Employee/AddEmployeeForm.js","components/Jira/AddJiraForm.js","components/Jira/AllJiras.js","components/Project/AllProjects.js","components/Project/AddProjectForm.js","components/Jira/CardSection.js","components/Jira/JiraStatus.js","components/Jira/JiraView.js","components/Personal/LiveText.js","App.js","serviceWorker.js","index.js"],"names":["AllEmployees","state","employees","Axios","get","then","response","data","setState","filter","emp","firstname","console","log","columns","label","field","sort","rows","this","className","style","backgroundColor","padding","striped","hover","responsive","Component","AddEmployeeForm","handleInput","e","target","name","value","formSubmit","preventDefault","employee","lastname","address","phone","email","date_of_birth","username","password","post","status","alert","Form","onSubmit","Group","as","Row","Label","column","sm","Col","Control","onChange","id","type","placeholder","borderBottom","paddingBottom","marginBottom","marginTop","textAlign","Button","size","align","AddJiraForm","allEmployees","allProjects","controlInput","submitForm","jira","title","description","priority","story_points","project_id","sprint","assignee","assigned_to","date_created","componentDidMount","min","max","map","row","key","plaintext","readOnly","defaultValue","AllJiras","jiras","tableContent","arr","obj","project","date_ended","push","AllProjects","projects","dataDisplay","project_head","bordered","AddProjectForm","employeesList","CardSection","allJiras","CardColumns","Card","border","Header","Body","Title","Text","Footer","variant","JiraStatus","jiraStatus","md","Table","count","JiraView","LiveText","components","addEmployeeForm","addJiraForm","addProjectForm","yourJiras","liveText","App","selectedComponent","changeComponent","comp","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","color","onClick","NavDropdown","Item","Divider","borderRadius","inline","FormControl","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.91f2f888.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport {MDBDataTable} from 'mdbreact';\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\n\r\nclass AllEmployees extends Component\r\n{\r\n    state = {\r\n        employees : []\r\n    }\r\n    componentDidMount(){\r\n        const URL = \"https://akkiapp.herokuapp.com/employee/viewall\";\r\n        Axios.get(URL).then(response => response.data)\r\n        .then((data)=>{\r\n            this.setState({employees : data});\r\n            this.setState({employees : this.state.employees.filter(emp => emp.firstname!=null)})\r\n            console.log(this.state.employees);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const data = {\r\n            columns: [\r\n              {\r\n                label: 'ID',\r\n                field: 'id',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'First Name',\r\n                field: 'firstname',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Last Name',\r\n                field: 'lastname',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Address',\r\n                field: 'address',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Phone',\r\n                field: 'phone',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Email',\r\n                field: 'email',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Date Of birth',\r\n                field: 'date_of_birth',\r\n                sort: 'asc'\r\n              }\r\n            ],\r\n            rows: this.state.employees\r\n        };\r\n        return(\r\n            <div className=\"row\" style={{backgroundColor:\"white\",padding : \"10px\"}}>\r\n                <div className=\"col-md-12\">\r\n                    <MDBDataTable\r\n                        striped\r\n                        hover\r\n                        responsive\r\n                        data= {data}\r\n                        >\r\n                    </MDBDataTable>\r\n                        \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllEmployees;","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Axios from \"axios\";\r\n\r\nclass AddEmployeeForm extends Component\r\n{\r\n\r\n    state= {\r\n        \"firstname\": \"\",\r\n        \"lastname\": \"\",\r\n        \"address\": \"\",\r\n        \"phone\": \"\",\r\n        \"email\": \"\",\r\n        \"date_of_birth\": \"\",\r\n        \"username\": \"\",\r\n        \"password\": \"\"\r\n    }\r\n\r\n    handleInput=(e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    formSubmit = (e) => {\r\n        e.preventDefault();\r\n        var employee = {\r\n            \"firstname\": this.state.firstname,\r\n            \"lastname\": this.state.lastname,\r\n            \"address\": this.state.address,\r\n            \"phone\": this.state.phone,\r\n            \"email\": this.state.email,\r\n            \"date_of_birth\": this.state.date_of_birth,\r\n            \"username\": this.state.username,\r\n            \"password\": this.state.password\r\n        };\r\n\r\n        Axios.post(\"https://akkiapp.herokuapp.com/employee/add\",employee).then(response => {\r\n            console.log(response);\r\n            if(response.status===200)\r\n            {\r\n                alert(\"Registered Succesfully\");\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div style={{padding : \"10px\",backgroundColor : \"white\"}} className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h2 className=\"text-center\">Add Employee</h2>\r\n                    </div>\r\n                </div>\r\n                <div style={{backgroundColor : \"white\"}} className=\"row\">\r\n                    <div className=\"col-md-3\"></div>\r\n                    <div className=\"col-md-6\">\r\n                        <Form onSubmit={this.formSubmit}>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Name\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Control onChange={this.handleInput}  name=\"firstname\" id=\"firstName\" type=\"text\" placeholder=\"First Name\"></Form.Control>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Control onChange={this.handleInput}  name=\"lastname\" id=\"lastName\" type=\"text\" placeholder=\"Last Name\"></Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Address\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  id=\"address\" name=\"address\" as=\"textarea\" placeholder=\"Address\" ></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Email\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Phone\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  name=\"phone\" id=\"phone\" type=\"text\" placeholder=\"Phone Number\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Date of birth\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  name=\"date_of_birth\" id=\"date_of_birth\" type=\"date\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <span><div className=\"row\" style={{borderBottom:\"1px solid #A9A9A9\",paddingBottom:\"5px\",marginBottom:\"30px\"}}></div></span>\r\n                            <Form.Group as={Row} style={{marginTop:\"2px\"}}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Username\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  name=\"username\" id=\"username\" type=\"text\" placeholder=\"Username\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Password\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  name=\"password\" id=\"password\" type=\"password\" placeholder=\"Password\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Confirm Password\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  name=\"confirm\" id=\"confirm\" type=\"password\" placeholder=\"Confirm Password\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <div as={Row}>\r\n                                <Col style={{textAlign : \"center\"}}>\r\n                                    <Button  size=\"lg\" align=\"center\" className=\"text-center\" type=\"submit\" >\r\n                                        Submit\r\n                                    </Button>\r\n                                    <br />\r\n                                    <br />\r\n                                </Col>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"col-md-3\"></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEmployeeForm;","import React, {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Axios from 'axios';\r\n\r\nclass AddJiraForm extends Component\r\n{\r\n    state = {\r\n        allEmployees : [],\r\n        allProjects : [],\r\n        \"title\": \"\",\r\n        \"description\": \"\",\r\n        \"priority\": \"Medium\",\r\n        \"story_points\": 0,\r\n        \"project_id\": 0,\r\n        \"sprint\": null,\r\n        \"assignee\": 102,\r\n        \"assigned_to\": null,\r\n        \"date_created\": \"2020-01-19\",\r\n        \"status\": \"Ready For Review\",\r\n        \"date_ended\": null\r\n        }\r\n\r\n    controlInput = (e) =>\r\n    {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    submitForm = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        var jira = {\r\n            \"title\": this.state.title,\r\n            \"description\": this.state.description,\r\n            \"priority\": this.state.priority,\r\n            \"story_points\": this.state.story_points,\r\n            \"project_id\": {\r\n                \"id\" : this.state.project_id\r\n            },\r\n            \"sprint\": this.state.sprint,\r\n            \"assignee\": {\r\n                \"id\" : this.state.assignee\r\n            },\r\n            \"assigned_to\": {\r\n                \"id\" : this.state.assigned_to\r\n            },\r\n            \"date_created\": this.state.date_created,\r\n            \"status\": this.state.status,\r\n            \"date_ended\": null\r\n        };\r\n\r\n        Axios.post(\"https://akkiapp.herokuapp.com/jira/add\",jira)\r\n        .then(response =>{ \r\n            console.log(response)\r\n            if(response.status===200)\r\n            {\r\n                alert(\"Registered Succesfully\");\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        Axios.get(\"https://akkiapp.herokuapp.com/employee/getnames\").then(response => response.data)\r\n        .then((data) => {\r\n            this.setState({allEmployees : data});\r\n            this.setState({allEmployees : this.state.allEmployees.filter(emp => emp.firstname!=null)})\r\n            console.log(this.state.allEmployees);\r\n        });\r\n\r\n        Axios.get(\"https://akkiapp.herokuapp.com/project/getnames\").then(response => response.data)\r\n        .then((data) => {\r\n            this.setState({allProjects : data});\r\n            console.log(this.state.allProjects);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>                \r\n                <div style={{padding : \"10px\",backgroundColor : \"white\"}}  className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h2 className=\"text-center\">Add Jira</h2>\r\n                    </div>\r\n                </div>\r\n                <div style={{backgroundColor : \"white\"}}  className=\"row\">\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"col-md-8\">\r\n                        <Form onSubmit={this.submitForm} >\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Title\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"title\"  id=\"title\" type=\"text\" placeholder=\"Title\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Description\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"description\" id=\"description\" as=\"textarea\" placeholder=\"Description\" ></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Priority\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"priority\" id=\"priority\" as=\"select\" >\r\n                                        <option value=\"High\">High</option>\r\n                                        <option value=\"Medium\">Medium</option>\r\n                                        <option value=\"Low\">Low</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Story Points\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"story_points\" id=\"story_points\" type=\"number\" min=\"0\" max=\"10\" ></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Project\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"project_id\" id=\"project_id\" as=\"select\" >\r\n                                        {\r\n                                            this.state.allProjects.map(row =>(\r\n                                            <option key={row.id} value={row.id}>{row.name}</option>\r\n                                            ))\r\n                                        }\r\n                                        <option value=\"1\">1 - DAC Refinement</option>\r\n                                        <option value=\"2\">2 - DAM Refinement</option>\r\n                                        <option value=\"3\">3 - CES Refinement</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Sprint\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"sprint\" id=\"sprint\" as=\"select\" >\r\n                                        <option value=\"52.1\">52.1</option>\r\n                                        <option value=\"52.2\">52.2</option>\r\n                                        <option value=\"53.1\">53.1</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Assignee\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"assignee\" id=\"assignee\" plaintext readOnly defaultValue=\"Praful Martis\" />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Assigned To\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"assigned_to\" id=\"assigned_to\" as=\"select\" >\r\n                                       <option>--Select--</option>\r\n                                        {\r\n                                            this.state.allEmployees.map(row => (\r\n                                                <option key={row.id} value={row.id}>{row.firstname+\" \"+row.lastname}</option>\r\n                                            ))\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Date Created\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"date_created\" id=\"date_created\" plaintext readOnly defaultValue=\"2020-02-21\" />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} style={{}}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Status\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"status\" id=\"status\" as=\"select\" >\r\n                                        <option value=\"Ready for review\">Ready For review</option>\r\n                                        <option value=\"Ready\">Ready</option>\r\n                                        <option value=\"In Play\">In Play</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <div as={Row}>\r\n                                <Col style={{textAlign : \"center\"}}>\r\n                                    <Button  size=\"lg\" align=\"center\" className=\"text-center\" type=\"submit\" >\r\n                                        Submit\r\n                                    </Button>\r\n                                    <br />\r\n                                    <br />\r\n\r\n                                </Col>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"col-md-2\"></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddJiraForm;","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport {MDBDataTable} from 'mdbreact';\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nclass AllJiras extends Component\r\n{\r\n    state = {\r\n        jiras : [],\r\n        tableContent : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        const URL = \"https://akkiapp.herokuapp.com/jira/viewall\";\r\n        Axios.get(URL).then(response => response.data)\r\n        .then((data)=>{\r\n            this.setState({jiras : data});\r\n            console.log(this.state.jiras);\r\n            var arr= [];\r\n            this.state.jiras.map(row => {\r\n                var obj = {\r\n                    \"id\" : row.id,\r\n                    \"title\": row.title,\r\n                    \"description\": row.description,\r\n                    \"priority\": row.priority,\r\n                    \"story_points\": row.story_points,\r\n                    \"project_id\": row.project!=null?row.project.id:\"Not Assigned\",\r\n                    \"sprint\": row.sprint,\r\n                    \"assignee\": row.assignee.firstname + ' '+ row.assignee.lastname,\r\n                    \"assigned_to\": row.assigned_to.firstname + ' '+ row.assigned_to.lastname,\r\n                    \"date_created\": row.date_created,\r\n                    \"status\": row.status,\r\n                    \"date_ended\": row.date_ended\r\n                };\r\n                arr.push(obj);\r\n            });\r\n            this.setState({tableContent : arr});\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const data = {\r\n            columns: [\r\n              {\r\n                label: 'ID',\r\n                field: 'id',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Title',\r\n                field: 'title',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Description',\r\n                field: 'description',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Priority',\r\n                field: 'priority',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Story Points',\r\n                field: 'story_points',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Project ID',\r\n                field: 'project_id',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Sprint',\r\n                field: 'sprint',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Assignee',\r\n                field: 'assignee',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Assigned To',\r\n                field: 'assigned_to',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Date Created',\r\n                field: 'date_created',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Status',\r\n                field: 'status',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Date Ended',\r\n                field: 'date_ended',\r\n                sort: 'asc'\r\n              }\r\n            ],\r\n            rows: this.state.tableContent\r\n        };\r\n        return(\r\n            <div className=\"row\" style={{backgroundColor:\"white\",padding : \"10px\"}}>\r\n                <div className=\"col-md-12\">\r\n                    <MDBDataTable\r\n                        striped\r\n                        hover\r\n                        responsive\r\n                        data= {data}\r\n                        >\r\n                    </MDBDataTable>\r\n        \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllJiras;","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport {MDBDataTable} from 'mdbreact';\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nclass AllProjects extends Component\r\n{\r\n    state = {\r\n        projects : [],\r\n        dataDisplay : []\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        const URL = \"https://akkiapp.herokuapp.com/project/viewall\";\r\n        Axios.get(URL).then(response => response.data)\r\n        .then((data)=>{\r\n            this.setState({projects : data});\r\n            console.log(this.state.projects);\r\n            var arr= [];\r\n            this.state.projects.map(row => {\r\n                var obj = {\r\n                    \"id\" : row.id,\r\n                    \"name\" : row.name,\r\n                    \"description\" : row.description,\r\n                    \"project_head\" : row.project_head.firstname + ' ' + row.project_head.lastname\r\n                };\r\n                arr.push(obj);\r\n            });\r\n            this.setState({dataDisplay : arr});\r\n            console.log(this.state.dataDisplay);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const data = {\r\n            columns: [\r\n              {\r\n                label: 'ID',\r\n                field: 'id',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Name',\r\n                field: 'name',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Description',\r\n                field: 'description',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Project Head',\r\n                field: 'project_head',\r\n                sort: 'asc'\r\n              }\r\n            ],\r\n            rows: this.state.dataDisplay\r\n        };\r\n        return(\r\n            <div className=\"row\" style={{backgroundColor:\"white\",padding : \"10px\"}}>\r\n                <div className=\"col-md-12\">\r\n\r\n                <MDBDataTable\r\n                    striped\r\n                    bordered\r\n                    hover\r\n                    responsive\r\n                    data= {data}\r\n                    >\r\n                </MDBDataTable>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllProjects;\r\n","import React, {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Axios from 'axios';\r\n\r\nclass AddProjectForm extends Component\r\n{\r\n\r\n    state = {\r\n        employeesList : [],\r\n        \"name\": \"\",\r\n        \"description\": \"\",\r\n        \"project_head\": null\r\n    }\r\n\r\n    controlInput = (e) =>\r\n    {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    submitForm = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        var project = {\r\n            \"name\": this.state.name,\r\n            \"description\": this.state.description,\r\n            \"project_head\": {\r\n                \"id\" : this.state.project_head\r\n            }\r\n        };\r\n        console.log(project);\r\n\r\n        Axios.post(\"https://akkiapp.herokuapp.com/project/add\",project)\r\n        .then(response => {\r\n            console.log(response);\r\n            if(response.status===200)\r\n            {\r\n                alert(\"Registered Succesfully\");\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        Axios.get(\"https://akkiapp.herokuapp.com/employee/getnames\").then(response => response.data)\r\n        .then((data) => {\r\n            this.setState({employeesList : data});\r\n            \r\n            this.setState({employeesList : this.state.employeesList.filter(emp => emp.firstname!=null)})\r\n            console.log(this.state.employeesList);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>                \r\n                <div style={{padding : \"10px\",backgroundColor : \"white\"}}  className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h2 className=\"text-center\">Add Project</h2>\r\n                    </div>\r\n                </div>\r\n                <div style={{backgroundColor : \"white\"}}  className=\"row\">\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"col-md-8\">\r\n                        <Form onSubmit={this.submitForm} >\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Name\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"name\"  id=\"name\" type=\"text\" placeholder=\"Project Name\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Description\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"description\" id=\"description\" as=\"textarea\" placeholder=\"Project description\" ></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Project Head\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"project_head\" id=\"project_head\" as=\"select\" >\r\n                                        <option>Select Head</option>\r\n                                        {\r\n                                            this.state.employeesList.map(row => (\r\n                                                <option key={row.id} value={row.id}>{row.firstname+\" \"+row.lastname}</option>\r\n                                            ))\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <div as={Row}>\r\n                                <Col style={{textAlign : \"center\"}}>\r\n                                    <Button  size=\"lg\" align=\"center\" className=\"text-center\" type=\"submit\" >\r\n                                        Submit\r\n                                    </Button>\r\n                                    <br />\r\n                                    <br />\r\n\r\n                                </Col>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"col-md-2\"></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddProjectForm;","import React, {Component} from 'react';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Axios from 'axios';\r\n\r\nclass CardSection extends Component\r\n{\r\n\r\n    state =  {\r\n        allJiras : []\r\n    };\r\n\r\n    componentDidMount = () =>{\r\n        const URL = \"https://akkiapp.herokuapp.com/jira/viewall\";\r\n        Axios.get(URL).then(response => response.data)\r\n        .then((data)=>{\r\n            this.setState({allJiras : data});\r\n            console.log(this.state.allJiras);\r\n        }) \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <CardColumns>\r\n                <Card border=\"primary\">\r\n                    <Card.Header className=\"text-center h4\">TPM - 19591</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title className=\"text-center\">Reduce DAC Build Time</Card.Title>\r\n                        <Card.Text className=\"text-center text-justify\">\r\n                            As an IDL user, I want to reduce the DAC build time in order to make it faster to run.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-center\">\r\n                        <Button variant=\"primary\">Open</Button>\r\n                    </Card.Footer>\r\n                </Card>\r\n                {\r\n                    this.state.allJiras.map(row =>(\r\n                        <Card key={row.id}  border=\"primary\">\r\n                            <Card.Header className=\"text-center h4\">TPM - {row.id}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title className=\"text-center\">{row.title}</Card.Title>\r\n                                <Card.Text className=\"text-center text-justify\">\r\n                                    {row.description}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Footer className=\"text-center\">\r\n                                <Button variant=\"primary\">Open</Button>\r\n                            </Card.Footer>\r\n                    </Card>\r\n                    ))\r\n                }\r\n            </CardColumns>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardSection;","import React, {Component} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Axios from 'axios';\r\n\r\nclass JiraStatus extends Component\r\n{\r\n    state = {\r\n        jiraStatus : []\r\n    }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        Axios.get(\"https://akkiapp.herokuapp.com/jira/getstatus\")\r\n        .then(response => response.data)\r\n        .then((data) => {\r\n            this.setState({\r\n                jiraStatus : data\r\n            });\r\n            console.log(this.state.jiraStatus);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div style={{backgroundColor: \"white\",padding : \"20px\"}}>\r\n                <h2 className=\"text-center\">Status</h2>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Table size=\"sm\" responsive hover striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Status</th>\r\n                                    <th>#</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.jiraStatus.map(row => (\r\n                                        <tr key={row.status}>\r\n                                            <td>{row.status}</td>\r\n                                            <td>{row.count}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                <tr>\r\n                                    <td className=\"text-success\">DONE</td>\r\n                                    <td>5</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-info\">IN PLAY</td>\r\n                                    <td>2</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-primary\">ON HOLD</td>\r\n                                    <td>3</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-danger\">CANCELLED</td>\r\n                                    <td>2</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JiraStatus;","import React, {Component} from 'react';\r\nimport CardSection from './CardSection';\r\nimport JiraStatus from './JiraStatus';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass JiraView extends Component\r\n{\r\n    render(){\r\n        return(\r\n            <Row>\r\n                <Col md={8}>\r\n                    <CardSection />\r\n                </Col>\r\n                <Col md={1}></Col>\r\n                <Col md={3}>\r\n                    <JiraStatus />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JiraView;","import React, {Component} from 'react';\r\nclass LiveText extends Component\r\n{\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                     <p>Hello World</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LiveText;","import React, { Component } from 'react';\nimport './App.css';\n\nimport AllEmployees from './components/Employee/AllEmployees';\nimport AddEmployeeForm from './components/Employee/AddEmployeeForm';\nimport AddJiraForm from './components/Jira/AddJiraForm';\nimport AllJiras from './components/Jira/AllJiras';\nimport AllProjects from './components/Project/AllProjects';\nimport AddProjectForm from './components/Project/AddProjectForm';\nimport JiraView from './components/Jira/JiraView';\nimport LiveText from './components/Personal/LiveText';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nvar components = {\n  employees : <AllEmployees />,\n  jiras : <AllJiras />,\n  addEmployeeForm : <AddEmployeeForm />,\n  addJiraForm : <AddJiraForm />,\n  projects : <AllProjects />,\n  addProjectForm : <AddProjectForm />,\n  yourJiras : <JiraView />,\n  liveText : <LiveText />\n\n}\n\n\nclass App extends Component\n{\n\n  state = {\n    selectedComponent : components.employees\n  }\n\n\n  changeComponent = (comp) =>{\n    this.setState(\n      {\n        selectedComponent : comp\n      }\n    )\n  }\n\n  render(){\n    return (\n      <>\n        <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">Akshat Singhal App</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav variant=\"pills\" className=\"mr-auto\">\n              <Nav.Link style={{color : \"white\"}} onClick={() => this.changeComponent(components.employees)} >Employees</Nav.Link>\n              <Nav.Link style={{color : \"white\"}} onClick={() => this.changeComponent(components.jiras)} >Jiras</Nav.Link>\n              <Nav.Link style={{color : \"white\"}} onClick={() => this.changeComponent(components.projects)} >Projects</Nav.Link>\n              <NavDropdown title=\"Add\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item onClick={()=> this.changeComponent(components.addEmployeeForm)} >Employee</NavDropdown.Item>\n                <NavDropdown.Item onClick={()=> this.changeComponent(components.addJiraForm)} >Jira</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item onClick={()=> this.changeComponent(components.addProjectForm)}  >Project</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav className=\"mr-auto\">\n              <Nav.Link style={{color : \"white\"}} onClick={() => this.changeComponent(components.yourJiras)} >Your Jiras</Nav.Link>\n              <Nav.Link style={{color : \"white\", backgroundColor : \"green\", borderRadius : \"10px\"}} onClick={() => this.changeComponent(components.liveText)} >Live Edit</Nav.Link>\n            </Nav>\n            <Form inline>\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n              <Button variant=\"success\">Search</Button>\n            </Form>\n          </Navbar.Collapse>\n        </Navbar>\n        <div className=\"container\" style={{marginTop:\"10px\"}}>\n          {this.state.selectedComponent}\n        </div>\n      </>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}