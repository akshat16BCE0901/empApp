{"version":3,"sources":["components/Employee/AllEmployees.js","components/Employee/AddEmployeeForm.js","components/Jira/AddJiraForm.js","components/Jira/AllJiras.js","components/Project/AllProjects.js","components/Project/AddProjectForm.js","components/Jira/CardSection.js","components/Jira/JiraStatus.js","components/Jira/JiraView.js","components/Personal/LiveText.js","App.js","serviceWorker.js","index.js"],"names":["AllEmployees","state","employees","columnDefs","headerName","field","sortable","filter","autoHeight","Axios","get","then","response","data","setState","emp","firstname","console","log","className","style","backgroundColor","padding","width","domLayout","colResizeDefault","this","rowData","Component","AddEmployeeForm","handleInput","e","target","name","value","formSubmit","preventDefault","employee","lastname","address","phone","email","date_of_birth","username","password","post","status","alert","Form","onSubmit","Group","as","Row","Label","column","sm","Col","Control","onChange","id","type","placeholder","borderBottom","paddingBottom","marginBottom","marginTop","textAlign","Button","size","align","AddJiraForm","allEmployees","allProjects","controlInput","submitForm","jira","title","description","priority","story_points","project_id","sprint","assignee","assigned_to","date_created","componentDidMount","min","max","map","row","key","plaintext","readOnly","defaultValue","AllJiras","jiras","tableContent","arr","obj","project","date_ended","push","columns","label","sort","rows","striped","hover","responsive","AllProjects","projects","dataDisplay","project_head","bordered","AddProjectForm","employeesList","Home","CardSection","allJiras","CardColumns","Card","border","Header","Body","Title","Text","Footer","variant","to","path","JiraStatus","jiraStatus","md","Table","count","JiraView","LiveText","script1","document","createElement","src","async","body","appendChild","script2","script3","script4","script5","script6","disabled","htmlFor","components","addEmployeeForm","addJiraForm","addProjectForm","yourJiras","liveText","App","selectedComponent","changeComponent","comp","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","color","onClick","NavDropdown","Item","Divider","borderRadius","inline","FormControl","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9c70e930.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\n\r\nclass AllEmployees extends Component\r\n{\r\n    state = {\r\n        employees : [],\r\n        columnDefs: [{\r\n            headerName: \"Id\", field: \"id\", sortable : true, filter : true, autoHeight : true\r\n        }, {\r\n            headerName: \"First Name\", field: \"firstname\", sortable : true, filter : true, autoHeight : true\r\n        },{\r\n            headerName: \"Last Name\", field: \"lastname\", sortable : true, filter : true, autoHeight : true\r\n        },{\r\n            headerName: \"Address\", field: \"address\", sortable : true, filter : true, autoHeight : true\r\n        },{\r\n            headerName: \"Phone\", field: \"phone\", sortable : true, filter : true, autoHeight : true\r\n        },{\r\n            headerName: \"Email\", field: \"email\", sortable : true, filter : true, autoHeight : true\r\n        },{\r\n            headerName: \"Date of birth\", field: \"date_of_birth\", sortable : true, filter : true, autoHeight : true\r\n        },{\r\n            headerName: \"Username\", field: \"username\", sortable : true, filter : true, autoHeight : true\r\n        },{\r\n            headerName: \"Password\", field: \"password\", sortable : true, filter : true, autoHeight : true\r\n        }]\r\n    }\r\n    componentDidMount(){\r\n        const URL = \"/employee/viewall\";\r\n        Axios.get(URL).then(response => response.data)\r\n            .then((data)=>{\r\n                this.setState({employees : data});\r\n                this.setState({employees : this.state.employees.filter(emp => emp.firstname!=null)})\r\n                console.log(this.state.employees);\r\n            });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\" style={{backgroundColor:\"white\",padding : \"10px\"}}>\r\n\r\n                <div style={{width : '100%'}} className=\"col-md-12 ag-theme-balham\">\r\n                    <AgGridReact\r\n                        domLayout='autoHeight'\r\n                        colResizeDefault='true'\r\n                        columnDefs={this.state.columnDefs}\r\n                        rowData={this.state.employees}>\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllEmployees;","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Axios from \"axios\";\r\n\r\nclass AddEmployeeForm extends Component\r\n{\r\n\r\n    state= {\r\n        \"firstname\": \"\",\r\n        \"lastname\": \"\",\r\n        \"address\": \"\",\r\n        \"phone\": \"\",\r\n        \"email\": \"\",\r\n        \"date_of_birth\": \"\",\r\n        \"username\": \"\",\r\n        \"password\": \"\"\r\n    }\r\n\r\n    handleInput=(e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    formSubmit = (e) => {\r\n        e.preventDefault();\r\n        var employee = {\r\n            \"firstname\": this.state.firstname,\r\n            \"lastname\": this.state.lastname,\r\n            \"address\": this.state.address,\r\n            \"phone\": this.state.phone,\r\n            \"email\": this.state.email,\r\n            \"date_of_birth\": this.state.date_of_birth,\r\n            \"username\": this.state.username,\r\n            \"password\": this.state.password\r\n        };\r\n\r\n        Axios.post(\"/employee/add\",employee).then(response => {\r\n            console.log(response);\r\n            if(response.status===200)\r\n            {\r\n                alert(\"Registered Succesfully\");\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div style={{padding : \"10px\",backgroundColor : \"white\"}} className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h2 className=\"text-center\">Add Employee</h2>\r\n                    </div>\r\n                </div>\r\n                <div style={{backgroundColor : \"white\"}} className=\"row\">\r\n                    <div className=\"col-md-3\"></div>\r\n                    <div className=\"col-md-6\">\r\n                        <Form onSubmit={this.formSubmit}>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Name\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Control onChange={this.handleInput}  name=\"firstname\" id=\"firstName\" type=\"text\" placeholder=\"First Name\"></Form.Control>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Control onChange={this.handleInput}  name=\"lastname\" id=\"lastName\" type=\"text\" placeholder=\"Last Name\"></Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Address\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  id=\"address\" name=\"address\" as=\"textarea\" placeholder=\"Address\" ></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Email\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Phone\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  name=\"phone\" id=\"phone\" type=\"text\" placeholder=\"Phone Number\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Date of birth\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  name=\"date_of_birth\" id=\"date_of_birth\" type=\"date\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <span><div className=\"row\" style={{borderBottom:\"1px solid #A9A9A9\",paddingBottom:\"5px\",marginBottom:\"30px\"}}></div></span>\r\n                            <Form.Group as={Row} style={{marginTop:\"2px\"}}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Username\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  name=\"username\" id=\"username\" type=\"text\" placeholder=\"Username\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Password\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  name=\"password\" id=\"password\" type=\"password\" placeholder=\"Password\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Confirm Password\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.handleInput}  name=\"confirm\" id=\"confirm\" type=\"password\" placeholder=\"Confirm Password\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <div as={Row}>\r\n                                <Col style={{textAlign : \"center\"}}>\r\n                                    <Button  size=\"lg\" align=\"center\" className=\"text-center\" type=\"submit\" >\r\n                                        Submit\r\n                                    </Button>\r\n                                    <br />\r\n                                    <br />\r\n                                </Col>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"col-md-3\"></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEmployeeForm;","import React, {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Axios from 'axios';\r\n\r\nclass AddJiraForm extends Component\r\n{\r\n    state = {\r\n        allEmployees : [],\r\n        allProjects : [],\r\n        \"title\": \"\",\r\n        \"description\": \"\",\r\n        \"priority\": \"Medium\",\r\n        \"story_points\": 0,\r\n        \"project_id\": 0,\r\n        \"sprint\": null,\r\n        \"assignee\": 102,\r\n        \"assigned_to\": null,\r\n        \"date_created\": \"2020-01-19\",\r\n        \"status\": \"Ready For Review\",\r\n        \"date_ended\": null\r\n        }\r\n\r\n    controlInput = (e) =>\r\n    {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    submitForm = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        var jira = {\r\n            \"title\": this.state.title,\r\n            \"description\": this.state.description,\r\n            \"priority\": this.state.priority,\r\n            \"story_points\": this.state.story_points,\r\n            \"project_id\": {\r\n                \"id\" : this.state.project_id\r\n            },\r\n            \"sprint\": this.state.sprint,\r\n            \"assignee\": {\r\n                \"id\" : this.state.assignee\r\n            },\r\n            \"assigned_to\": {\r\n                \"id\" : this.state.assigned_to\r\n            },\r\n            \"date_created\": this.state.date_created,\r\n            \"status\": this.state.status,\r\n            \"date_ended\": null\r\n        };\r\n\r\n        Axios.post(\"/jira/add\",jira)\r\n        .then(response =>{ \r\n            console.log(response)\r\n            if(response.status===200)\r\n            {\r\n                alert(\"Registered Succesfully\");\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        Axios.get(\"/employee/getnames\").then(response => response.data)\r\n        .then((data) => {\r\n            this.setState({allEmployees : data});\r\n            this.setState({allEmployees : this.state.allEmployees.filter(emp => emp.firstname!=null)})\r\n            console.log(this.state.allEmployees);\r\n        });\r\n\r\n        Axios.get(\"/project/getnames\").then(response => response.data)\r\n        .then((data) => {\r\n            this.setState({allProjects : data});\r\n            console.log(this.state.allProjects);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>                \r\n                <div style={{padding : \"10px\",backgroundColor : \"white\"}}  className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h2 className=\"text-center\">Add Jira</h2>\r\n                    </div>\r\n                </div>\r\n                <div style={{backgroundColor : \"white\"}}  className=\"row\">\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"col-md-8\">\r\n                        <Form onSubmit={this.submitForm} >\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Title\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"title\"  id=\"title\" type=\"text\" placeholder=\"Title\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Description\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"description\" id=\"description\" as=\"textarea\" placeholder=\"Description\" ></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Priority\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"priority\" id=\"priority\" as=\"select\" >\r\n                                        <option value=\"High\">High</option>\r\n                                        <option value=\"Medium\">Medium</option>\r\n                                        <option value=\"Low\">Low</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Story Points\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"story_points\" id=\"story_points\" type=\"number\" min=\"0\" max=\"10\" ></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Project\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"project_id\" id=\"project_id\" as=\"select\" >\r\n                                        {\r\n                                            this.state.allProjects.map(row =>(\r\n                                            <option key={row.id} value={row.id}>{row.name}</option>\r\n                                            ))\r\n                                        }\r\n                                        <option value=\"1\">1 - DAC Refinement</option>\r\n                                        <option value=\"2\">2 - DAM Refinement</option>\r\n                                        <option value=\"3\">3 - CES Refinement</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Sprint\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"sprint\" id=\"sprint\" as=\"select\" >\r\n                                        <option value=\"52.1\">52.1</option>\r\n                                        <option value=\"52.2\">52.2</option>\r\n                                        <option value=\"53.1\">53.1</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Assignee\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"assignee\" id=\"assignee\" plaintext readOnly defaultValue=\"Praful Martis\" />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Assigned To\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"assigned_to\" id=\"assigned_to\" as=\"select\" >\r\n                                       <option>--Select--</option>\r\n                                        {\r\n                                            this.state.allEmployees.map(row => (\r\n                                                <option key={row.id} value={row.id}>{row.firstname+\" \"+row.lastname}</option>\r\n                                            ))\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Date Created\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"date_created\" id=\"date_created\" plaintext readOnly defaultValue=\"2020-02-21\" />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} style={{}}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Status\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"status\" id=\"status\" as=\"select\" >\r\n                                        <option value=\"Ready for review\">Ready For review</option>\r\n                                        <option value=\"Ready\">Ready</option>\r\n                                        <option value=\"In Play\">In Play</option>\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <div as={Row}>\r\n                                <Col style={{textAlign : \"center\"}}>\r\n                                    <Button  size=\"lg\" align=\"center\" className=\"text-center\" type=\"submit\" >\r\n                                        Submit\r\n                                    </Button>\r\n                                    <br />\r\n                                    <br />\r\n\r\n                                </Col>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"col-md-2\"></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddJiraForm;","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport {MDBDataTable} from 'mdbreact';\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nclass AllJiras extends Component\r\n{\r\n    state = {\r\n        jiras : [],\r\n        tableContent : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        const URL = \"/jira/viewall\";\r\n        Axios.get(URL).then(response => response.data)\r\n        .then((data)=>{\r\n            this.setState({jiras : data});\r\n            console.log(this.state.jiras);\r\n            var arr= [];\r\n            this.state.jiras.map(row => {\r\n                var obj = {\r\n                    \"id\" : row.id,\r\n                    \"title\": row.title,\r\n                    \"description\": row.description,\r\n                    \"priority\": row.priority,\r\n                    \"story_points\": row.story_points,\r\n                    \"project_id\": row.project!=null?row.project.id:\"Not Assigned\",\r\n                    \"sprint\": row.sprint,\r\n                    \"assignee\": row.assignee.firstname + ' '+ row.assignee.lastname,\r\n                    \"assigned_to\": row.assigned_to.firstname + ' '+ row.assigned_to.lastname,\r\n                    \"date_created\": row.date_created,\r\n                    \"status\": row.status,\r\n                    \"date_ended\": row.date_ended\r\n                };\r\n                arr.push(obj);\r\n            });\r\n            this.setState({tableContent : arr});\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const data = {\r\n            columns: [\r\n              {\r\n                label: 'ID',\r\n                field: 'id',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Title',\r\n                field: 'title',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Description',\r\n                field: 'description',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Priority',\r\n                field: 'priority',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Story Points',\r\n                field: 'story_points',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Project ID',\r\n                field: 'project_id',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Sprint',\r\n                field: 'sprint',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Assignee',\r\n                field: 'assignee',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Assigned To',\r\n                field: 'assigned_to',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Date Created',\r\n                field: 'date_created',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Status',\r\n                field: 'status',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Date Ended',\r\n                field: 'date_ended',\r\n                sort: 'asc'\r\n              }\r\n            ],\r\n            rows: this.state.tableContent\r\n        };\r\n        return(\r\n            <div className=\"row\" style={{backgroundColor:\"white\",padding : \"10px\"}}>\r\n                <div className=\"col-md-12\">\r\n                    <MDBDataTable\r\n                        striped\r\n                        hover\r\n                        responsive\r\n                        data= {data}\r\n                        >\r\n                    </MDBDataTable>\r\n        \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllJiras;","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport {MDBDataTable} from 'mdbreact';\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nclass AllProjects extends Component\r\n{\r\n    state = {\r\n        projects : [],\r\n        dataDisplay : []\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        const URL = \"/project/viewall\";\r\n        Axios.get(URL).then(response => response.data)\r\n        .then((data)=>{\r\n            this.setState({projects : data});\r\n            console.log(this.state.projects);\r\n            var arr= [];\r\n            this.state.projects.map(row => {\r\n                var obj = {\r\n                    \"id\" : row.id,\r\n                    \"name\" : row.name,\r\n                    \"description\" : row.description,\r\n                    \"project_head\" : row.project_head.firstname + ' ' + row.project_head.lastname\r\n                };\r\n                arr.push(obj);\r\n            });\r\n            this.setState({dataDisplay : arr});\r\n            console.log(this.state.dataDisplay);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const data = {\r\n            columns: [\r\n              {\r\n                label: 'ID',\r\n                field: 'id',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Name',\r\n                field: 'name',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Description',\r\n                field: 'description',\r\n                sort: 'asc'\r\n              },\r\n              {\r\n                label: 'Project Head',\r\n                field: 'project_head',\r\n                sort: 'asc'\r\n              }\r\n            ],\r\n            rows: this.state.dataDisplay\r\n        };\r\n        return(\r\n            <div className=\"row\" style={{backgroundColor:\"white\",padding : \"10px\"}}>\r\n                <div className=\"col-md-12\">\r\n\r\n                <MDBDataTable\r\n                    striped\r\n                    bordered\r\n                    hover\r\n                    responsive\r\n                    data= {data}\r\n                    >\r\n                </MDBDataTable>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllProjects;\r\n","import React, {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Axios from 'axios';\r\n\r\nclass AddProjectForm extends Component\r\n{\r\n\r\n    state = {\r\n        employeesList : [],\r\n        \"name\": \"\",\r\n        \"description\": \"\",\r\n        \"project_head\": null\r\n    }\r\n\r\n    controlInput = (e) =>\r\n    {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    submitForm = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        var project = {\r\n            \"name\": this.state.name,\r\n            \"description\": this.state.description,\r\n            \"project_head\": {\r\n                \"id\" : this.state.project_head\r\n            }\r\n        };\r\n        console.log(project);\r\n\r\n        Axios.post(\"/project/add\",project)\r\n        .then(response => {\r\n            console.log(response);\r\n            if(response.status===200)\r\n            {\r\n                alert(\"Registered Succesfully\");\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        Axios.get(\"/employee/getnames\").then(response => response.data)\r\n        .then((data) => {\r\n            this.setState({employeesList : data});\r\n            \r\n            this.setState({employeesList : this.state.employeesList.filter(emp => emp.firstname!=null)})\r\n            console.log(this.state.employeesList);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>                \r\n                <div style={{padding : \"10px\",backgroundColor : \"white\"}}  className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h2 className=\"text-center\">Add Project</h2>\r\n                    </div>\r\n                </div>\r\n                <div style={{backgroundColor : \"white\"}}  className=\"row\">\r\n                    <div className=\"col-md-2\"></div>\r\n                    <div className=\"col-md-8\">\r\n                        <Form onSubmit={this.submitForm} >\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Name\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"name\"  id=\"name\" type=\"text\" placeholder=\"Project Name\"></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Description\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"description\" id=\"description\" as=\"textarea\" placeholder=\"Project description\" ></Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row}>\r\n                                <Form.Label column sm=\"2\">\r\n                                    Project Head\r\n                                </Form.Label>\r\n                                <Col sm=\"10\">\r\n                                    <Form.Control onChange={this.controlInput} name=\"project_head\" id=\"project_head\" as=\"select\" >\r\n                                        <option>Select Head</option>\r\n                                        {\r\n                                            this.state.employeesList.map(row => (\r\n                                                <option key={row.id} value={row.id}>{row.firstname+\" \"+row.lastname}</option>\r\n                                            ))\r\n                                        }\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <div as={Row}>\r\n                                <Col style={{textAlign : \"center\"}}>\r\n                                    <Button  size=\"lg\" align=\"center\" className=\"text-center\" type=\"submit\" >\r\n                                        Submit\r\n                                    </Button>\r\n                                    <br />\r\n                                    <br />\r\n\r\n                                </Col>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"col-md-2\"></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddProjectForm;","import React, {Component} from 'react';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Axios from 'axios';\r\nimport { Link, BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nclass CardSection extends Component\r\n{\r\n\r\n    state =  {\r\n        allJiras : []\r\n    };\r\n\r\n    componentDidMount = () =>{\r\n        const URL = \"https://akkiapp.herokuapp.com/jira/viewall\";\r\n        Axios.get(URL).then(response => response.data)\r\n            .then((data)=>{\r\n                this.setState({allJiras : data});\r\n                console.log(this.state.allJiras);\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <CardColumns>\r\n                <Card border=\"primary\">\r\n                    <Card.Header className=\"text-center h4\">TPM - 19591</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title className=\"text-center\">Reduce DAC Build Time</Card.Title>\r\n                        <Card.Text className=\"text-center text-justify\">\r\n                            As an IDL user, I want to reduce the DAC build time in order to make it faster to run.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-center\">\r\n                        <Button variant=\"primary\">Open</Button>\r\n                    </Card.Footer>\r\n                </Card>\r\n                {\r\n                    this.state.allJiras.map(row =>(\r\n                        <Card key={row.id}  border=\"primary\">\r\n                            <Card.Header className=\"text-center h4\">TPM - {row.id}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title className=\"text-center\">{row.title}</Card.Title>\r\n                                <Card.Text className=\"text-center text-justify\">\r\n                                    {row.description}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Footer className=\"text-center\">\r\n                                <Router>\r\n                                    <Link to=\"/abc\">\r\n                                        <Button variant=\"primary\">Open</Button>\r\n                                    </Link>\r\n                                    <Switch>\r\n                                        <Route path=\"/abc\">\r\n                                            <Home />\r\n                                        </Route>\r\n                                    </Switch>\r\n                                </Router>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    ))\r\n                }\r\n            </CardColumns>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <h2>Home</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardSection;","import React, {Component} from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Axios from 'axios';\r\n\r\nclass JiraStatus extends Component\r\n{\r\n    state = {\r\n        jiraStatus : []\r\n    }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        Axios.get(\"/jira/getstatus\")\r\n        .then(response => response.data)\r\n        .then((data) => {\r\n            this.setState({\r\n                jiraStatus : data\r\n            });\r\n            console.log(this.state.jiraStatus);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div style={{backgroundColor: \"white\",padding : \"20px\"}}>\r\n                <h2 className=\"text-center\">Status</h2>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Table size=\"sm\" responsive hover striped bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Status</th>\r\n                                    <th>#</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.jiraStatus.map(row => (\r\n                                        <tr key={row.status}>\r\n                                            <td>{row.status}</td>\r\n                                            <td>{row.count}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                <tr>\r\n                                    <td className=\"text-success\">DONE</td>\r\n                                    <td>5</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-info\">IN PLAY</td>\r\n                                    <td>2</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-primary\">ON HOLD</td>\r\n                                    <td>3</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"text-danger\">CANCELLED</td>\r\n                                    <td>2</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JiraStatus;","import React, {Component} from 'react';\r\nimport CardSection from './CardSection';\r\nimport JiraStatus from './JiraStatus';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass JiraView extends Component\r\n{\r\n    render(){\r\n        return(\r\n            <Row>\r\n                <Col md={8}>\r\n                    <CardSection />\r\n                </Col>\r\n                <Col md={1}></Col>\r\n                <Col md={3}>\r\n                    <JiraStatus />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JiraView;","import React, {Component} from 'react';\r\n\r\nimport 'jquery/dist/jquery.min.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\n\r\n\r\nclass LiveText extends Component\r\n{\r\n\r\n    componentDidMount = () =>{\r\n        const script1 = document.createElement(\"script\");\r\n        script1.src = \"https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.1.4/sockjs.min.js\";\r\n        script1.async = true;\r\n        document.body.appendChild(script1);\r\n\r\n        const script2= document.createElement(\"script\");\r\n        script2.src = \"https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js\";\r\n        script2.async = true;\r\n        document.body.appendChild(script2);\r\n\r\n        const script3 = document.createElement(\"script\");\r\n        script3.src = \"/js/main.js\";\r\n        script3.async = true;\r\n        document.body.appendChild(script3);\r\n\r\n        const script4 = document.createElement(\"script\");\r\n        script4.src = \"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\";\r\n        script4.async = true;\r\n        document.body.appendChild(script4);\r\n\r\n        const script5 = document.createElement(\"script\");\r\n        script5.src = \"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\";\r\n        script5.async = true;\r\n        document.body.appendChild(script5);\r\n\r\n        const script6 = document.createElement(\"script\");\r\n        script6.src = \"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\";\r\n        script6.async = true;\r\n        document.body.appendChild(script6);\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"main-content\" className=\"row\" style={{backgroundColor:\"white\",padding : \"10px\"}}>\r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-6\">\r\n                    <form className=\"form-inline\">\r\n                        <div className=\"form-group\">\r\n                            <input id=\"username\" type=\"text\" placeholder=\"Enter Name\" />\r\n                            <button id=\"connect\" className=\"btn btn-default\" type=\"button\">Connect</button>\r\n                            <button id=\"disconnect\" className=\"btn btn-default\" type=\"button\"\r\n                                    disabled=\"disabled\">Disconnect\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-md-3\"></div>\r\n                <div className=\"col-md-2\"></div>\r\n                <div className=\"col-md-8\" id=\"chattab\">\r\n                    <form className=\"form-inline\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">Enter your message</label>\r\n                            <textarea className=\"form-control\" id=\"name\" placeholder=\"Enter yor message here\"></textarea>\r\n                        </div>\r\n                        <button id=\"send\" className=\"btn btn-default\" type=\"button\">Send</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-md-2\"></div>\r\n                <div className=\"col-md-12\">\r\n                    <table id=\"conversation\" className=\"table table-striped\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>ChatRoom</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody id=\"greetings\">\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LiveText;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport AllEmployees from './components/Employee/AllEmployees';\r\nimport AddEmployeeForm from './components/Employee/AddEmployeeForm';\r\nimport AddJiraForm from './components/Jira/AddJiraForm';\r\nimport AllJiras from './components/Jira/AllJiras';\r\nimport AllProjects from './components/Project/AllProjects';\r\nimport AddProjectForm from './components/Project/AddProjectForm';\r\nimport JiraView from './components/Jira/JiraView';\r\nimport LiveText from './components/Personal/LiveText';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nvar components = {\r\n  employees : <AllEmployees />,\r\n  jiras : <AllJiras />,\r\n  addEmployeeForm : <AddEmployeeForm />,\r\n  addJiraForm : <AddJiraForm />,\r\n  projects : <AllProjects />,\r\n  addProjectForm : <AddProjectForm />,\r\n  yourJiras : <JiraView />,\r\n  liveText : <LiveText />\r\n\r\n}\r\n\r\n\r\nclass App extends Component\r\n{\r\n\r\n  state = {\r\n    selectedComponent : components.employees\r\n  }\r\n\r\n\r\n  changeComponent = (comp) =>{\r\n    this.setState(\r\n      {\r\n        selectedComponent : comp\r\n      }\r\n    )\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n          <Navbar.Brand href=\"#home\">Akshat Singhal App</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav variant=\"pills\" className=\"mr-auto\">\r\n              <Nav.Link style={{color : \"white\"}} onClick={() => this.changeComponent(components.employees)} >Employees</Nav.Link>\r\n              <Nav.Link style={{color : \"white\"}} onClick={() => this.changeComponent(components.jiras)} >Jiras</Nav.Link>\r\n              <Nav.Link style={{color : \"white\"}} onClick={() => this.changeComponent(components.projects)} >Projects</Nav.Link>\r\n              <NavDropdown title=\"Add\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item onClick={()=> this.changeComponent(components.addEmployeeForm)} >Employee</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={()=> this.changeComponent(components.addJiraForm)} >Jira</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item onClick={()=> this.changeComponent(components.addProjectForm)}  >Project</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link style={{color : \"white\"}} onClick={() => this.changeComponent(components.yourJiras)} >Your Jiras</Nav.Link>\r\n              <Nav.Link style={{color : \"white\", backgroundColor : \"green\", borderRadius : \"10px\"}} onClick={() => this.changeComponent(components.liveText)} >Live Edit</Nav.Link>\r\n            </Nav>\r\n            <Form inline>\r\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n              <Button variant=\"success\">Search</Button>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <div className=\"container\" style={{marginTop:\"10px\"}}>\r\n          {this.state.selectedComponent}\r\n        </div>\r\n      </>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}